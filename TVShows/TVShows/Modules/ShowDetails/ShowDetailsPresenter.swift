//
//  ShowDetailsPresenter.swift
//  TVShows
//
//  Created by Ivan Milicevic on 22/10/2018.
//  Copyright (c) 2018 Ivan Milicevic. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit

final class ShowDetailsPresenter {

    // MARK: - Private properties -

    private unowned var _view: ShowDetailsViewInterface
    private var _interactor: ShowDetailsInteractorInterface
    private var _wireframe: ShowDetailsWireframeInterface

    private var _show: Show
    private var _showDetails: ShowDetails?
    private var _episodesArray: [ShowEpisode] = []

    // MARK: - Lifecycle -

    init(wireframe: ShowDetailsWireframeInterface, view: ShowDetailsViewInterface, interactor: ShowDetailsInteractorInterface, show: Show) {
        _wireframe = wireframe
        _view = view
        _interactor = interactor
        _show = show
    }

}

// MARK: - Extensions -

extension ShowDetailsPresenter: ShowDetailsPresenterInterface {

    func viewDidLoad() {
        _interactor.fetchShowDetails(show: _show) { result in
            switch result {
            case .success(let showDetails):
                self._showDetails = showDetails
                self._interactor.fetchEpisodes(show: self._show) { result in
                    switch result {
                    case .success(let episodes):
                        self._episodesArray = episodes
                        self._view.reloadData()
                    case .failure(let error):
                        print(error)
                    }
                }
            case .failure(let error):
                print (error)
            }
        }

    }

    func didPressBackButton() {
        _wireframe.navigate(to: .home)
    }



}
