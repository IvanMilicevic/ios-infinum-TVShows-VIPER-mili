//
//  ShowDetailsWireframe.swift
//  TVShows
//
//  Created by Ivan Milicevic on 22/10/2018.
//  Copyright (c) 2018 Ivan Milicevic. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit

final class ShowDetailsWireframe: BaseWireframe {

    // MARK: - Private properties -

    private let _storyboard = UIStoryboard(name: "ShowDetails", bundle: nil)
    private weak var _delegate: ShowDetailsPresenterInterface?

    // MARK: - Module setup -

    init(show: Show) {
        let moduleViewController = _storyboard.instantiateViewController(ofType: ShowDetailsViewController.self)
        super.init(viewController: moduleViewController)
        
        let interactor = ShowDetailsInteractor()
        let presenter = ShowDetailsPresenter(wireframe: self, view: moduleViewController, interactor: interactor, show: show)
        moduleViewController.presenter = presenter
        _delegate = presenter
    }

}

// MARK: - Extensions -

extension ShowDetailsWireframe: ShowDetailsWireframeInterface {

    func navigate(to option: ShowDetailsNavigationOption) {

        switch option {
        case .home:
            _goToHome()
        case .addNewEpisode(let show):
            _goToAddNewEpisode(show: show)
        }
    }

    private func _goToHome() {
        navigationController?.popViewController(animated: true)
    }

    private func _goToAddNewEpisode(show: Show) {
        guard let _delegate = _delegate else {
            return
        }

        let wireframe = AddNewEpisodeWireframe(show: show, delegate : _delegate)

        navigationController?.pushWireframe(wireframe)
    }
}
