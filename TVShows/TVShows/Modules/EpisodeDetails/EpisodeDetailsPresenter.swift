//
//  EpisodeDetailsPresenter.swift
//  TVShows
//
//  Created by Ivan Milicevic on 23/10/2018.
//  Copyright (c) 2018 Ivan Milicevic. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit

final class EpisodeDetailsPresenter {

    // MARK: - Private properties -

    private unowned var _view: EpisodeDetailsViewInterface
    private var _interactor: EpisodeDetailsInteractorInterface
    private var _wireframe: EpisodeDetailsWireframeInterface

    private var _episode: ShowEpisode
    private var _episodeDetails: EpisodeDetails?
    // MARK: - Lifecycle -

    init(wireframe: EpisodeDetailsWireframeInterface, view: EpisodeDetailsViewInterface, interactor: EpisodeDetailsInteractorInterface, episode: ShowEpisode) {
        _wireframe = wireframe
        _view = view
        _interactor = interactor
        _episode = episode
    }
}

// MARK: - Extensions -

extension EpisodeDetailsPresenter: EpisodeDetailsPresenterInterface {

    func viewDidLoad() {
        _interactor.fetchEpisodeDetails(episode: _episode) { result in

            switch result {
            case .success(let episodeDetails):
                self._episodeDetails = episodeDetails
                self._view.reloadData(episodeDetails: episodeDetails)
            case .failure(let error):
                print(error)
            }

        }
    }
    
    func didPressBackButton() {
        _wireframe.navigate(to: .showDetails)
    }

    func didPressCommentsButton() {
        _wireframe.navigate(to: .comments)
    }

}
